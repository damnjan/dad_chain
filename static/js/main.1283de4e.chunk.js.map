{"version":3,"sources":["components/App.module.css","components/Trolldad.module.css","components/SpeechBubble.module.css","trolldad.png","components/Button.module.css","actions.js","reducers.js","api.js","generateJoke.js","sagas.js","components/SpeechBubble.js","components/Trolldad.js","components/Button.js","components/App.js","index.js"],"names":["module","exports","colors","background","app","container","bottom","image","animated","swing","__webpack_require__","p","button","JOKES_FETCH_REQUESTED","JOKES_FETCH_SUCCEEDED","JOKES_FETCH_FAILED","SET_CURRENT_JOKE","GENERATE_JOKE","generateJoke","allJokes","type","initialState","currentJoke","isFetching","combineReducers","jokes","state","arguments","length","undefined","action","Object","objectSpread","data","params","method","headers","Accept","getAllJokes","localStorage","getItem","Promise","resolve","fetchAllJokes","reject","getPage","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","page","response","text","wrap","_context","prev","next","fetch","concat","sent","setItem","t0","stop","this","_x","apply","seed","first","chain","Markov","useUpperCase","wordList","tmpList","keys","filter","word","Math","random","endFn","sentence","split","match","start","end","process","second","fetchJokes","saga","call","put","message","_marked","newJoke","_context2","_generateJoke","_marked2","_context3","takeLatest","_marked3","SpeechBubble","props","react","className","styles","React","Trolldad","classNames","alt","src","trolldad","Button","_this$props","onClick","children","customStyle","visible","visibility","style","App","_this","dispatch","react_default","createElement","SpeechBubble_SpeechBubble","Button_Button","Trolldad_Trolldad","key","Component","connect","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","composeWithDevTools","applyMiddleware","run","ReactDOM","render","react_redux_es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.1283de4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../colors.css'\",\"background\":\"#444\",\"app\":\"App_app__WiF_-\",\"container\":\"App_container__7oZ4r\",\"bottom\":\"App_bottom__3-Z-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Trolldad_image__Ub5Qv\",\"animated\":\"Trolldad_animated__GyvGi\",\"swing\":\"Trolldad_swing__3AbCs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../colors.css'\",\"background\":\"#444\",\"container\":\"SpeechBubble_container__2NqZ7\"};","module.exports = __webpack_public_path__ + \"static/media/trolldad.96dc951b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3TBzb\"};","// Action Types\nexport const JOKES_FETCH_REQUESTED = 'JOKES_REQUESTED';\nexport const JOKES_FETCH_SUCCEEDED = 'JOKES_FETCH_SUCCEEDED';\nexport const JOKES_FETCH_FAILED = 'JOKES_FETCH_FAILED';\nexport const SET_CURRENT_JOKE = 'SET_CURRENT_JOKE';\nexport const GENERATE_JOKE = 'GENERATE_JOKE';\n\n// Action Creators\nexport const requestJokes = () => ({\n\ttype: JOKES_FETCH_REQUESTED\n});\n\nexport const generateJoke = (allJokes) => ({\n\ttype: GENERATE_JOKE,\n\tallJokes\n});","import { combineReducers } from 'redux';\nimport { JOKES_FETCH_REQUESTED, JOKES_FETCH_SUCCEEDED, SET_CURRENT_JOKE } from \"./actions\";\n\nconst initialState = {\n\tallJokes: null,\n\tcurrentJoke: null,\n\tisFetching: false,\n};\n\nconst jokes = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase JOKES_FETCH_REQUESTED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: true,\n\t\t\t};\n\t\tcase JOKES_FETCH_SUCCEEDED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\tallJokes: action.data\n\t\t\t};\n\t\tcase SET_CURRENT_JOKE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentJoke: action.data,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default combineReducers({ jokes });","const params = {\n\tmethod: 'GET',\n\theaders: {\n\t\t'Accept': 'text/plain'\n\t}\n};\n\n// Get jokes from cache if they exist, otherwise get them from API\nexport const getAllJokes = () => {\n\tconst allJokes = localStorage.getItem('allJokes');\n\tif (allJokes) {\n\t\treturn Promise.resolve(allJokes);\n\t}\n\treturn fetchAllJokes();\n};\n\nexport const fetchAllJokes = () => {\n\treturn new Promise((resolve, reject) => {\n\t\tlet allJokes = '';\n\t\t// Recursively get all pages with jokes (when we get empty response, there are no more jokes)\n\t\tconst getPage = async (page) => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(`https://icanhazdadjoke.com/search?page=${page}&limit=30`, params);\n\t\t\t\tconst text = await response.text();\n\t\t\t\tif (text) {\n\t\t\t\t\tallJokes += `${text}\\n`;\n\t\t\t\t\tgetPage(++page);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(allJokes);\n\t\t\t\t\tlocalStorage.setItem('allJokes', allJokes);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t}\n\t\t};\n\t\t// Call the recursive function starting with page 1\n\t\tgetPage(1);\n\t});\n};","import Markov from 'markovchain';\n\nexport const generateJoke = (seed) => {\n\tconst chain = new Markov(seed);\n\n\t// Use first word for a generated sentence only if it is capitalized\n\tconst useUpperCase = (wordList) => {\n\t\t\tconst tmpList = Object.keys(wordList).filter((word) => {\n\t\t\t\treturn word[0] >= 'A' && word[0] <= 'Z'\n\t\t\t});\n\t\t\treturn tmpList[~~(Math.random() * tmpList.length)]\n\t\t}\n\t;\n\n\t// Ends the sentence if it's longer than 15 words AND doesn't end on specific words\n\tconst endFn = sentence => {\n\t\tconst length = sentence.split(' ').length;\n\t\treturn length >= 15 && !sentence.match(/(a|an|the|if|or|by|but|I|,)$/i);\n\t};\n\n\t// First sentence\n\tlet first;\n\t// Keep generating until sentence is at least 3 words long\n\tdo {\n\t\tfirst = chain.start(useUpperCase).end(endFn).process();\n\t} while (first.split(' ').length <= 3);\n\n\t// Is it a question?\n\tif (first.match(/^(why|what|who|where|did|do)/i)) {\n\t\tfirst += '?';\n\t} else if (!first.match(/[.,!?]$/)) {\n\t\tfirst += '.';\n\t}\n\n\t// Generate another sentence\n\tlet second = chain.start(useUpperCase).end(endFn).process();\n\tif (!second.match(/[.,!?]$/)) {\n\t\tsecond += '.';\n\t}\n\n\t// If first sentence is longer than 15, don't write second one\n\tif (first.split(' ').length >= 15) {\n\t\tsecond = '';\n\t}\n\n\treturn `${first} ${second}`;\n};","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { JOKES_FETCH_FAILED, JOKES_FETCH_REQUESTED, JOKES_FETCH_SUCCEEDED, SET_CURRENT_JOKE, GENERATE_JOKE } from \"./actions\";\nimport { getAllJokes } from \"./api\";\nimport { generateJoke as _generateJoke } from \"./generateJoke\";\n\nfunction* fetchJokes() {\n\ttry {\n\t\tconst jokes = yield call(getAllJokes);\n\t\tyield put({ type: JOKES_FETCH_SUCCEEDED, data: jokes });\n\t} catch (e) {\n\t\tyield put({ type: JOKES_FETCH_FAILED, message: e.message });\n\t}\n}\n\nfunction* generateJoke(action) {\n\tconst newJoke = _generateJoke(action.allJokes);\n\tyield put({ type: SET_CURRENT_JOKE, data: newJoke});\n\tconst allJokes = action.allJokes + `\\n${newJoke}`;\n\tyield put({ type: JOKES_FETCH_SUCCEEDED, data: allJokes })\n\tlocalStorage.setItem('allJokes', allJokes);\n}\n\nexport default function* saga() {\n\tyield takeLatest(JOKES_FETCH_REQUESTED, fetchJokes);\n\tyield takeLatest(GENERATE_JOKE, generateJoke);\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SpeechBubble.module.css';\n\nexport default class SpeechBubble extends React.PureComponent {\n\tstatic propTypes = {\n\t\ttext: PropTypes.string\n\t};\n\n\trender() {\n\t\tconst { text } = this.props;\n\t\treturn text && (\n\t\t\t<div className={styles.container}>\n\t\t\t\t{text}\n\t\t\t</div>\n\t\t)\n\t}\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport trolldad from '../trolldad.png';\nimport styles from './Trolldad.module.css';\n\nexport default class Trolldad extends React.PureComponent {\n\trender() {\n\t\tconst classNames = ` ${styles.image} ${styles.animated}`;\n\t\treturn <img alt=\"trolldad\" src={trolldad} className={classNames} />\n\t}\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nexport default class Button extends React.PureComponent {\n\tstatic propTypes = {\n\t\tonClick: PropTypes.func,\n\t\tchildren: PropTypes.any,\n\t\tvisible: PropTypes.bool,\n\t};\n\n\trender() {\n\t\tconst { onClick, children, visible } = this.props;\n\t\tconst customStyle = !visible ? {visibility: 'hidden'} : {};\n\t\treturn (\n\t\t\t<div className={styles.button} style={customStyle} onClick={onClick}>{children}</div>\n\t\t)\n\t}\n}","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport { connect } from 'react-redux';\nimport { requestJokes, generateJoke } from \"../actions\";\nimport SpeechBubble from \"./SpeechBubble\";\nimport Trolldad from \"./Trolldad\";\nimport Button from \"./Button\";\n\nclass App extends Component {\n\n\tgenerateJoke = () => {\n\t\tconst { allJokes } = this.props;\n\t\tthis.props.dispatch(generateJoke(allJokes));\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.props.dispatch(requestJokes());\n\t}\n\n\trender() {\n\t\tconst { currentJoke, isFetching } = this.props;\n\t\tconst placeholderText = `Ok, I'm ready. Press 'Generate joke' button and try not to laugh.`;\n\t\treturn (\n\t\t\t<div className={styles.app}>\n\t\t\t\t<div className={styles.container}>\n\t\t\t\t\t<SpeechBubble text={isFetching ? 'Downloading some jokes... Wait!' : currentJoke || placeholderText}/>\n\t\t\t\t\t<div className={styles.bottom}>\n\t\t\t\t\t\t<Button visible={!isFetching} onClick={this.generateJoke}>Generate joke</Button>\n\t\t\t\t\t\t<Trolldad key={currentJoke}/>{/* Key is used to force re-render in order to trigger the animation */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tallJokes: state.jokes.allJokes,\n\tcurrentJoke: state.jokes.currentJoke,\n\tisFetching: state.jokes.isFetching,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from './reducers';\nimport saga from './sagas';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from \"react-redux\";\n\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n\treducer,\n\tcomposeWithDevTools(\n\t\tapplyMiddleware(sagaMiddleware)\n\t)\n);\n\nsagaMiddleware.run(saga);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App/>\n\t</Provider>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}